; ENTRADA DE TECLADO - INPUT.INC


.CODE

; LEER TECLADO

LEER_TECLADO PROC
    MOV AH, 01H
    INT 16H
    JZ NO_TECLA
    
    MOV AH, 00H
    INT 16H
    
   
    CMP AL, 'w'
    JE ES_W
    CMP AL, 'W'
    JE ES_W
    
    CMP AL, 's'
    JE ES_S
    CMP AL, 'S'
    JE ES_S
    
    CMP AL, 'a'
    JE ES_A
    CMP AL, 'A'
    JE ES_A
    
    CMP AL, 'd'
    JE ES_D
    CMP AL, 'D'
    JE ES_D
    
    CMP AL, 27      ; ESC
    JE ES_ESC
    
    JMP NO_TECLA

ES_W:
    JMP MOVER_ARRIBA

ES_S:
    JMP MOVER_ABAJO

ES_A:
    JMP MOVER_IZQUIERDA

ES_D:
    JMP MOVER_DERECHA

ES_ESC:
    JMP SALIR_JUEGO

NO_TECLA:
    RET


; RUTINAS DE MOVIMIENTO

MOVER_ARRIBA:
    MOV DIRECCION, 2
    SUB JUGADOR_Y, 2
    CALL VERIFICAR_COLISION
    JNC MOVIMIENTO_OK_ARRIBA
    ADD JUGADOR_Y, 2
    RET
MOVIMIENTO_OK_ARRIBA:
    ; Solo redibujar el 치rea afectada
    CALL REDIBUJAR_PARCIAL
    RET

MOVER_ABAJO:
    MOV DIRECCION, 3
    ADD JUGADOR_Y, 2
    CALL VERIFICAR_COLISION
    JNC MOVIMIENTO_OK_ABAJO
    SUB JUGADOR_Y, 2
    RET
MOVIMIENTO_OK_ABAJO:
    CALL REDIBUJAR_PARCIAL
    RET

MOVER_IZQUIERDA:
    MOV DIRECCION, 1
    SUB JUGADOR_X, 2
    CALL VERIFICAR_COLISION
    JNC MOVIMIENTO_OK_IZQ
    ADD JUGADOR_X, 2
    RET
MOVIMIENTO_OK_IZQ:
    CALL REDIBUJAR_PARCIAL
    RET

MOVER_DERECHA:
    MOV DIRECCION, 0
    ADD JUGADOR_X, 2
    CALL VERIFICAR_COLISION
    JNC MOVIMIENTO_OK_DER
    SUB JUGADOR_X, 2
    RET
MOVIMIENTO_OK_DER:
    CALL REDIBUJAR_PARCIAL
    RET


; REDIBUJAR SOLO LA PARTE QUE CAMBIO

REDIBUJAR_PARCIAL PROC
    ; Borrar posici칩n anterior del jugador
    CALL BORRAR_JUGADOR_ANTERIOR
    
    ; Dibujar jugador en nueva posici칩n
    CALL DIBUJAR_JUGADOR
    
    ; Actualizar posici칩n anterior
    MOV AX, JUGADOR_X
    MOV JUGADOR_X_ANTERIOR, AX
    MOV AX, JUGADOR_Y
    MOV JUGADOR_Y_ANTERIOR, AX
    
    RET
REDIBUJAR_PARCIAL ENDP

SALIR_JUEGO:
    MOV AX, 4C00H
    INT 21H

LEER_TECLADO ENDP