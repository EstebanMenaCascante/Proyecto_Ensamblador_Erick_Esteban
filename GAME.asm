.MODEL SMALL
.STACK 100H

; Incluir archivos de funciones
INCLUDE Graph.INC
INCLUDE map.INC
INCLUDE player.INC
INCLUDE resour.INC
INCLUDE input.INC

.DATA
    MENSAJE_INICIO DB 'JUEGO DE EXPLORACION - PRESIONA TECLA', '$'
    MENSAJE_VICTORIA DB '!FELICIDADES! RECOLECTASTE TODOS LOS RECURSOS', '$'
    MENSAJE_FIN DB 'FIN DEL JUEGO', '$'
    
.CODE
MAIN PROC
    MOV AX, @DATA
    MOV DS, AX
    
    MOV AH, 09H
    LEA DX, MENSAJE_INICIO
    INT 21H
    MOV AH, 00H
    INT 16H
    
    
    MOV AX, 0003H
    INT 10H
    
    ; Inicializar sistemas
    CALL INICIAR_MODO_GRAFICO
    CALL CARGAR_MAPA
    CALL INICIALIZAR_JUGADOR
    CALL CARGAR_RECURSOS
    
   
    CALL DIBUJAR_FRAME_COMPLETO
    
    CALL BUCLE_PRINCIPAL
    
    ; Volver a modo texto
    MOV AX, 0003H
    INT 10H
    
   
    MOV AH, 09H
    LEA DX, MENSAJE_FIN
    INT 21H
    
    
    MOV AH, 4CH
    INT 21H
MAIN ENDP


; BUCLE PRINCIPAL DEL JUEGO

BUCLE_PRINCIPAL PROC
BUCLE_JUEGO:
    ; Leer teclado (ya no redibuja automáticamente)
    CALL LEER_TECLADO
    
    ; Verificar recolección
    CALL VERIFICAR_RECOLECCION
    
    ; Control de velocidad (reducido)
    MOV CX, 0
    MOV DX, 1000
    MOV AH, 86H
    INT 15H
    
    ; Verificar victoria
    CALL VERIFICAR_VICTORIA
    CMP AL, 1
    JE VICTORIA
    
    JMP BUCLE_JUEGO
    
VICTORIA:
    MOV AX, 0003H
    INT 10H
    MOV AH, 09H
    LEA DX, MENSAJE_VICTORIA
    INT 21H
    MOV AH, 00H
    INT 16H
    RET
BUCLE_PRINCIPAL ENDP


; ACTUALIZAR JUEGO

ACTUALIZAR_JUEGO PROC
    CALL ACTUALIZAR_VIEWPORT
    CALL VERIFICAR_RECOLECCION
    CALL DIBUJAR_FRAME_COMPLETO
    RET
ACTUALIZAR_JUEGO ENDP

END MAIN